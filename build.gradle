buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = mod_version
group = mod_group
archivesBaseName = mod_id

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = mappings_version
    String resolved_core_plugin = mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id);
    clientJvmArgs += "-Dfml.coreMods.load=${resolved_core_plugin}"
    serverJvmArgs += "-Dfml.coreMods.load=${resolved_core_plugin}"
    String resolved_core_config = mod_mixin_configs.replace('${mod_id}', mod_id);
    clientRunArgs += "--mixin ${resolved_core_config}"
    serverRunArgs += "--mixin ${resolved_core_config}"
}

repositories {
    maven { url = "https://repo.spongepowered.org/maven" }
    maven { url = 'https://impactdevelopment.github.io/maven/' }
}

dependencies {
    provided('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }

    compile 'com.github.ZeroMemes:Alpine:1.5'
    compile 'net.jodah:typetools:0.5.0'
    compile 'club.minnced:java-discord-rpc:2.0.1'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': project.minecraft.version, 'mod_description': mod_description,
                'mod_author': mod_author
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename "(.+_at.cfg)", 'META-INF/$1'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.mimeware.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.github.ZeroMemes:Alpine'))
        include(dependency('net.jodah:typetools'))
        include(dependency('club.minnced:java-discord-rpc'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

jar {
    from(configurations.provided.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
	attributes (
		"FMLAT": "mimeware_at.cfg",
		"FMLCorePlugin": mod_core_plugin,
		"FMLCorePluginContainsFMLMod": "true",
		"ForceLoadAsMod": "true",
		"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
		"TweakOrder": "0",
		"MixinConfigs": mod_mixin_configs.replace('${mod_id}', mod_id)
	)
    }
}

build.dependsOn(shadowJar)